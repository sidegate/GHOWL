Introduction
============

GHOWL is a framework to aid creation of parallel programs for GPGPU architectures. Initial support is for C++ with the nVidia CUDA framework. Later versions will extend to OpenCL and DirectCompute. Languages other than C++ may be supported in future.

Rationale
=========
The primary disadvantages with the CUDA framework and the nvcc compiler are twofold. Firstly, the CUDA framework relies on non-standard C++ constructs, which means that such code can never be compiled without nvcc. The second disadvantage is the very speed of the nvcc compiler, which is several times slower than current C++ compilers ( gcc, MSVC etc. ). This means that an incremental compile-debug-edit cycle is not practical. The non-standard C++ syntax also causes IDEs and other tools to balk.

To avoid this, GHOWL provides a set of wrapper macros and functions that let standard C++ code to be written, compiled, and run even in the abscence of the CUDA framework and libraries. Such code will run on the GPU when compiled with nvcc, but serially on the CPU when compiled under a normal C++ compiler.

Future extensions toward OpenCL and DirectCompute will be wrapped up similarly, so that the code is framework agnostic.


Structure
=========
Currently almost all the code is in a single monolithic C++ header file. Templates are used heavily and most classes within the file are dependent on others, so it's not possible to separate them out. 
Precompiled headers are recommended when using the library.
